#!/usr/bin/env bash

set -euo pipefail

source ./env_common.sh

export CONTAINER_MOUNTS="$PWD/container_scripts/:/container_scripts,${RESULTS_DIR}:/results"

export OMPI_MCA_pml=ucx
export OMPI_MCA_btl=^openib,smcuda
export OMPI_MCA_btl_tcp_if_exclude=lo,docker
export OMPI_MCA_opal_common_ucx_tls=any
export OMPI_MCA_opal_common_ucx_devices=any
#export PMIX_MCA_psec=^munge
#export PMIX_MCA_gds=^ds21

usage() {
    cat << EOF
Usage: $(basename $0) <image_path> <tests>
    image_path  Docker image to use for the tests.
    tests       OSU perf tests to run (eg. osu_bw).
EOF
}

source utils.sh

main() {
    if [[ $# -lt 2 ]]; then
        usage >&2
        exit 1
    fi

    local image=$1
    shift 1
    local tests=$@
    local container=osu_perf
    local osu_home=/usr/local/libexec/osu-micro-benchmarks

    ./preload-image.sh "$image" "$container"

    for tst in $tests; do
        for src in H D MH MD; do
            for dst in H D MH MD; do
                local out_file="${tst}.${src}.${dst}"
                export UCX_LOG_FILE="/results/ucx_log.${out_file}.%h.%p"
                run_container_tasks "$container" 2 \
                    /container_scripts/export-local-rank \
                    /container_scripts/bind-numa-local-rank \
                    "${osu_home}/mpi/pt2pt/${tst}" "$src" "$dst" \
                | tee "./results/${out_file}.dat"
            done
        done
    done
}

main "$@"
